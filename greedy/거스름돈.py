# 그리디 알고리즘(탐욕법) : 현재 상황에서 지금 당장 좋은 것만 고르는 방법
# 문제 풀이를 위한 최소한의 아이디어를 떠올리고, 이것이 정당한지 검토

# N원을 거슬러주어야 할 때
n = 1260
count = 0

# 가장 큰 화폐 단위부터 돈 거슬러주는 것이 최적의 해를 보장하는 이유?
# 큰 단위가 항상 작은 단위의 배수이기 때문 (작은 단위의 동전들을 종합해 다른 해가 나올 수 없기 때문)
array = [500, 100, 50, 10]

for coin in array:
  # 현재 동전으로 최대한 많이 거슬러주면 몇 개인지(몫)
  count += n // coin
  # 거슬러주고 남는 금액 업데이트
  n %= coin

print(count)

# 시간 복잡도 분석
# 화폐의 종류 : K개
# 시간복잡도 : O(K)
# 거슬러줘야 하는 금액 N과는 무관, 동전의 총 종류 K에만 영향받음(for 문)